Client (ts) on sol playground (solpg.io)

TASKS
1. Make sure you are connected to the devnet and you have a wallet set up
2. Run the default client code, this will tell you your balance.
3. Create an airdrop signature and request the airdrop from the connection object
pg.connection.requestAirdrop you will need to add your public key and the number of
lamports you want.
4. Use await pg.connection.confirmTransaction; to confirm the transaction


SOLUTION:

try {
  const keypair = pg.wallet;
  console.log("My address:", keypair.publicKey.toString());

  const balance = await pg.connection.getBalance(pg.wallet.publicKey);
  console.log(`My balance: ${balance / web3.LAMPORTS_PER_SOL} SOL`);

  const airdropSignature = await pg.connection.requestAirdrop(
    keypair.publicKey,
    web3.LAMPORTS_PER_SOL
  );

  let latestBlockhash = await pg.connection.getLatestBlockhash();

  await pg.connection.confirmTransaction({
    blockhash: latestBlockhash.blockhash,
    lastValidBlockHeight: latestBlockhash.lastValidBlockHeight,
    signature: airdropSignature,
  });
} catch (err) {
  console.error("An error occured: " + err);
}